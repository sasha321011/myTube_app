services:
  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./myTube:/myTube

    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass


    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
#sh -c "gunicorn --bind 0.0.0.0:8000 core.wsgi:application"

    depends_on:
      - database
      

  database:
    image: postgres:14.6-alpine
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"

  redis:
    image: redis:7.0.5-alpine
    hostname: redis
  
  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./myTube:/myTube
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./myTube:/myTube
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"
  frontend:
    build:
      context: ../frontend/vue-mytube
    ports:
      - "8080:8080"
    volumes:
      - ../frontend/vue-mytube:/app
    command: >
      sh -c "npm run serve"
    environment:
      - NODE_ENV=development

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./myTube/static:/myTube/static
      - ./myTube/media:/myTube/media
    depends_on:
      - web-app
      - frontend
    command: >
      sh -c "sleep 10 && nginx -g 'daemon off;'"
    #restart: always  

